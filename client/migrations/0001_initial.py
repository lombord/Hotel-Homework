# Generated by Django 4.2.4 on 2023-09-07 17:07

import client.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_book', models.DateTimeField(validators=[django.core.validators.MinValueValidator(django.utils.timezone.now, 'Start date must be in the future')])),
                ('end_book', models.DateTimeField(validators=[django.core.validators.MinValueValidator(django.utils.timezone.now, 'End date must be in the future')])),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
                ('approve_status', models.DecimalField(choices=[(0, 'Pending'), (1, 'Approved'), (2, 'Rejected')], decimal_places=0, default=0, max_digits=1)),
            ],
            bases=(client.models.InitModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.DecimalField(choices=[(1, 'Average'), (2, 'Comfort'), (3, 'VIP')], decimal_places=0, default=1, max_digits=1)),
                ('slug', models.SlugField(blank=True, default='', max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=19)),
                ('image', models.ImageField(default='defaults/default.png', upload_to='rooms/%Y/%m/%d/')),
                ('description', models.TextField(blank=True, default='')),
                ('is_hidden', models.BooleanField(blank=True, default=False)),
                ('is_liked', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'ordering': ('-pk',),
            },
            bases=(client.models.InitModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('price', models.DecimalField(decimal_places=2, max_digits=19)),
            ],
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.UniqueConstraint(fields=('slug',), name='slug_unique', violation_error_message='Slug field must be unique!'),
        ),
        migrations.AddField(
            model_name='comment',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='client.room'),
        ),
        migrations.AddConstraint(
            model_name='client',
            constraint=models.UniqueConstraint(fields=('first_name', 'middle_name', 'last_name'), name='client_unique', violation_error_message='Client should be unique!'),
        ),
        migrations.AddField(
            model_name='booking',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='client.client'),
        ),
        migrations.AddField(
            model_name='booking',
            name='room',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='client.room'),
        ),
        migrations.AddField(
            model_name='booking',
            name='services',
            field=models.ManyToManyField(blank=True, related_name='bookings', to='client.service'),
        ),
    ]
